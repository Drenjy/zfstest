#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# ident	"@(#)hotspare.kshlib	1.6	09/06/22 SMI"
#

. $STF_SUITE/include/libtest.kshlib
. $STF_SUITE/tests/functional/cli_root/zpool_add/zpool_add.kshlib


function cleanup_devices_all
{
	$RM -f /var/tmp/file.*

	return 0
}

typeset pooldevs sparedevs logdevs
set -A keywords "" "mirror" "raidz" "raidz2"
set -A devarray
 
function set_devs
{
	typeset -i i=0
	while (( i < 8 )) ; do
		eval devarray[$i]=/var/tmp/file.$i
		$MKFILE $SIZE ${devarray[$i]}
		(( i = i + 1 ))
	done

	sparedevs="${devarray[0]} ${devarray[1]}"

	pooldevs="${devarray[3]} ${devarray[4]} ${devarray[5]}"

	if verify_slog_support ; then
		logdevs="${devarray[7]}"
	fi	

}

function partition_cleanup
{
	cleanup_devices_all
	return 0
}

#
# $1: keyword, should be "" "mirror" "raidz" "raidz2"
# $2: hotspare list, default as $sparedevs
#
function setup_hotspares # keyword, spares
{
	typeset keyword=$1
	typeset spares=${2:-$sparedevs}

	create_pool "$TESTPOOL" "$keyword" \
		$pooldevs
	log_must poolexists "$TESTPOOL"
	log_must $ZPOOL add -f "$TESTPOOL" spare $spares
	log_must iscontained "$TESTPOOL" "$spares"

	if [[ -n $logdevs ]] ; then
		log_must $ZPOOL add -f "$TESTPOOL" log $logdevs
		log_must iscontained "$TESTPOOL" "$logdevs"
	fi
}

#
# $1: the function name that run for all hotspares
# $2: hotspare list, default as $sparedevs
#
function iterate_over_hotspares # function, spares
{
	typeset function=$1
	typeset spares=${2:-$sparedevs}

	for spare in $spares
	do
		$function $spare
	done
}
	
